services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT}:5432
    env_file:
      - .env
    networks:
      - app-network
  
  frontend:
    build:
      dockerfile: Dockerfile
    image: ghcr.io/briiad/widatech-pos-frontend:latest
    ports:
      - ${FRONTEND_PORT}:4173
    networks:
      - app-network
    command: npm run preview
    env_file:
      - .env

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    stdin_open: true
    image: ghcr.io/briiad/widatech-pos-backend:latest
    tty: true
    ports:
      - ${BACKEND_PORT}:5000
    networks:
      - app-network
    command: npm start
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: ghcr.io/briiad/widatech-pos-nginx:latest
    ports:
      - ${REACT_APP_NGINX_PORT}:80
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    env_file:
      - .env
    
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local